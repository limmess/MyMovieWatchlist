@using MyMovieWatchlist.Models
@model List<MyMovieWatchlist.Models.SiteMenu>

@{
    ViewBag.Title = "My Movies";
}

<h2>My Movies</h2>


@{
    List<SelectListItem> listItems = Model.Select(m => new SelectListItem {Value = m.Id.ToString(), Text = m.NavUrl}).ToList();
    listItems.Add( new SelectListItem() { Value = "-1", Text = "/" });
    List<SelectListItem> sortedListItems = listItems.OrderBy(d => d.Text).ToList();
}




<p>
    @using (Html.BeginForm("CreateDir","Home"))
    {
        <div>
            Create Directory
        </div>

        @Html.TextBox("dirName")
        <p>
            @Html.DropDownList("parentMenuId", (IEnumerable<SelectListItem>)sortedListItems, "Select ...")
            @*@Html.DropDownList("parentMenuId", (IEnumerable<SelectListItem>) Model.Select(m => new SelectListItem {Value = m.Id.ToString(), Text = m.NavUrl}).ToList(), "Select ...")*@
        </p>

    <input type="submit" value="New Directory" class="btn btn-default" />
    }



    <p>
        @using (Html.BeginForm())
        {
            <div>
                Search Movie
            </div>

            @Html.TextBox("search")

            <input type="submit" value="Search" class="btn btn-default" />
        }

        <div>
            <div class="treeview1">
                @if (Model != null && Model.Any())
            {
                    <ul>
                        @TreeView.GetTreeView(Model, Model.FirstOrDefault().ParentMenuId, this.Html)
                    </ul>
                }
            </div>
        </div>



        <style>
            .collapse1 {
                width: 15px;
                background-image: url('../Images/ui-icons_454545_256x240.png');
                background-repeat: no-repeat;
                background-position: -36px -17px;
                display: inline-block;
                cursor: pointer;
            }

            .expand1 {
                width: 15px;
                background-image: url('../Images/ui-icons_454545_256x240.png');
                background-repeat: no-repeat;
                background-position: -50px -17px;
                display: inline-block;
                cursor: pointer;
            }

            .treeview1 ul {
                font: 14px Arial, Sans-Serif;
                margin: 0px;
                padding-left: 20px;
                list-style: none;
            }

            .treeview1 > li > a {
                font-weight: bold;
            }

            .treeview1 li {
            }

                .treeview1 li a {
                    padding: 4px;
                    font-size: 12px;
                    display: inline-block;
                    text-decoration: none;
                    width: auto;
                }
        </style>

        @section Scripts{
            <script>
                $(document).ready(function () {
                    $(".treeview1 li>ul").css('display', 'none'); // Hide all 2-level ul
                    $(".collapsible").click(function (e) {
                        e.preventDefault();
                        $(this).toggleClass("collapse1 expand1");
                        $(this).closest('li').children('ul').slideToggle();
                    });
                });
            </script>
        }






        @*@model IEnumerable<MyMovieWatchlist.Models.Movie>

            @{
            ViewBag.Title = "My Movies";
            }

            <h2>My Movies</h2>

            <p>
                @using (Html.BeginForm())
                {
                <div>
                    Search Movie
                </div>

                @Html.TextBox("search")

                <input type="submit" value="Search" class="btn btn-default" />
                }
            </p>

            <table class="table">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Title)</th>
                    <th>@Html.DisplayNameFor(model => model.SiteMenuId)</th>
                    <th>@Html.DisplayNameFor(model => model.imdbID)</th>
                    <th>Action</th>
                </tr>

                @foreach (var item in Model)
                {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.SiteMenuId)</td>
                    <td>@Html.DisplayFor(modelItem => item.imdbID)</td>
                    <td>
                        @Html.ActionLink("Details", "Movie", new { SelectedMovieImdbId = item.imdbID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
                }
            </table>*@
